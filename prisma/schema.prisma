// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int      @id @default(autoincrement())
  fullName           String
  email              String   @unique
  password           String
  role               String
  studentId          String?  // nullable
  isTransferStudent  Boolean? // nullable
  previousInstitution String? // nullable
  specialization     String?  // nullable
  experience         String?  // nullable
  qualifications     String?  // nullable
  idDocumentPath     String?  // nullable
  transferLetterPath String?  // nullable
  resumePath         String?  // nullable
  createdAt          DateTime @default(now())
  lastActive         DateTime? // <-- new field for activity tracking
  messages           ContactMessage[]
  status             UserStatus @default(pending)
  logins             Login[] // <-- relation to Login
}

enum UserStatus {
  pending
  active
  rejected
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  category    String
  price       Float
  duration    String
  studentCount Int
  rating      String
  imageUrl    String
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  subject   String
  message   String
  reply     String?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [email], references: [email])
}

model Content {
  id        Int      @id @default(autoincrement())
  section   String   @unique
  title     String?
  subtitle  String?
  description String?
  imageUrl  String?
  updatedAt DateTime @updatedAt
}

model Login {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  timestamp DateTime @default(now())
}
